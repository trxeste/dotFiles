## Primeiro baixe a imagem
## prepare seu disco
# Primeiramente, é uma boa idéia certificar-se de que você encontrou o HD correto para particionamento.
# Tente este comando e verifique se /dev/sda é o disco que você deseja particionar:

# fdisk -l /dev/sda

# Agora, é recomendado que você apague qualquer tabela de partição MBR ou GPT existente no disco,
# as quais podem confundir a BIOS durante o boot. Faremos isso usando 

# sgdisk --zap-all /dev/sda

# Agora usaremos fdisk para criar a tabela de partição MBR e as partições: 

# fdisk /dev/sda
Command (m for help): o ↵

Create Partition 1 (boot):

Command (m for help): n ↵
Partition type (default p): ↵
Partition number (1-4, default 1): ↵
First sector: ↵
Last sector: +128M ↵

Create Partition 2 (swap):

Command (m for help): n ↵
Partition type (default p): ↵
Partition number (2-4, default 2): ↵
First sector: ↵
Last sector: +2G ↵
Command (m for help): t ↵ 
Partition number (1,2, default 2):  ↵
Hex code (type L to list all codes): 82 ↵

Create the root partition:

Command (m for help): n ↵
Partition type (default p): ↵
Partition number (3,4, default 3): ↵
First sector: ↵
Last sector: ↵

Verify the partition table:

Command (m for help): p

Disk /dev/sda: 298.1 GiB, 320072933376 bytes, 625142448 sectors
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disklabel type: dos
Disk identifier: 0x82abc9a6

Device    Boot     Start       End    Blocks  Id System
/dev/sda1           2048    264191    131072  83 Linux
/dev/sda2         264192   4458495   2097152  82 Linux swap / Solaris
/dev/sda3        4458496 625142447 310341976  83 Linux

Write the parition table to disk:

Command (m for help): w

## Criando sistemas de arquivos

# mkfs.ext2 /dev/sda1
# mkswap /dev/sda2
# swapon /dev/sda2

# Agora, criaremos o sistema de arquivos raiz.
# É onde sua instalação do Funtoo Linux viverá.
# Geralmente recomendamos sistemas de arquivos em ext4 ou XFS.
# Se você estiver em dúvida, escolha ext4. Eis o comando para criar um sistema de arquivos raiz em ext4: 

# mkfs.ext4 /dev/sda3

## Montando sistemas de arquivos

# Monte as partições recém criadas como a seguir, criando /mnt/funtoo como ponto de montagem da instalação: 

# mkdir /mnt/funtoo
# mount /dev/sda3 /mnt/funtoo
# mkdir /mnt/funtoo/boot
# mount /dev/sda1 /mnt/funtoo/boot

# Opcionalmente, se você tem uma partição separada para /home ou algo assim: 
# mkdir /mnt/funtoo/home
# mount /dev/sda4 /mnt/funtoo/home

# Se você tem /tmp ou /var/tmp em uma partição separada,
# certifique-se de alterar as permissões do ponto de montagem para que
#  seja gravável globalmente após a montagem, dessa maneira: 

# chmod 1777 /mnt/funtoo/tmp

## Definindo a Data

# Agora é uma boa hora para verificar se a data e hora do sistema estão corretamente definidas para UTC.
# Use o comando date para checar a data e a hora: 

# date
Fri Jul 15 19:47:18 UTC 2011

# Se a data e/ou hora precisam ser corrigidas, use date MMDDhhmmYYYY.

# date 111723082016

# Definida a data e hora do sistema, é uma boa idéia copiar o horário para o relógio do hardware,
# assim ele persiste após reiniciar o computador: 

# hwclock --systohc

## Instalando Stage 3

# Extrair Stage3

# cd /mnt/funtoo
# tar xpf stage3-latest.tar.xz

## Copy DNS

# cp -L /etc/resolv.conf /mnt/funtoo/etc/

## Montando os sistemas de arquivos necessários

# mount -t proc proc /mnt/funtoo/proc
# mount --rbind /sys /mnt/funtoo/sys
# mount --make-rslave /mnt/funtoo/sys
# mount --rbind /dev /mnt/funtoo/dev
# mount --make-rslave /mnt/funtoo/dev

# rm /dev/shm && mkdir /dev/shm 
# mount -t tmpfs -o nosuid,nodev,noexec shm /dev/shm
# chmod 1777 /dev/shm

## Entrando no novo ambiente

# chroot /mnt/funtoo /bin/bash
# source /etc/profile
# export PS1="(chroot) $PS1"

### Baixando a árvore do Portage

(chroot) # emerge --sync

## Configuring your system

(chroot) # nano /etc/fstab

## local time /etc/localtime

(chroot) # ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime

# MAKEOPTS pode ser usado para definir quantas compilações em paralelo devem ocorrer quando se compila um pacote,
# o que pode acelerar significativamente a compilação. O valor padrão é o número de CPU's (ou threads de CPU) em seu 
# sistema mais um. Se, por exemplo, você tem um processador dual core sem hyper-threading, então você deve definir MAKEOPTS para 3: 

nano /etc/portage/make.conf

MAKEOPTS="-j3" 

na duvida: 
(chroot) # nproc
16

### Atualizando o World

(chroot) # emerge --sync
(chroot) # emerge -auDN @world

# Vamos dar um emerge no kernel:
(chroot) # emerge debian-sources 

(chroot) puppypc3557 / # nano /etc/modprobe.d/blacklist.conf

blacklist nouveau

## Instalando um Bootloader

(chroot) # emerge --ask boot-update

# configurar o bootloader

o /etc/boot.conf deve estar assim:

boot {
	generate grub
	default "Funtoo Linux genkernel" 
	timeout 3 
}

"Funtoo Linux" {
	kernel bzImage[-v]
}

"Funtoo Linux genkernel" {
	kernel kernel[-v]
	initrd initramfs[-v]
	params += real_root=auto 
} 

"Funtoo Linux better-initramfs" {
	kernel vmlinuz[-v]
	initrd /initramfs.cpio.gz
}

## instalando grub

(chroot) # grub-install --target=i386-pc --no-floppy /dev/sda
(chroot) # boot-update
